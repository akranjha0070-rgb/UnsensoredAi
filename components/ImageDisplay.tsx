import React from 'react';

interface ImageDisplayProps {
  imageUrl: string;
  isLoading: boolean;
  enhancedPrompt: string;
}

const ImageDisplay: React.FC<ImageDisplayProps> = ({ imageUrl, isLoading, enhancedPrompt }) => {
  return (
    <div className="bg-slate-800/50 border border-slate-700 rounded-xl p-4 shadow-lg min-h-[400px] flex flex-col justify-center items-center">
      {isLoading && (
        <div className="w-full space-y-4">
          <div className="bg-slate-700/50 rounded-lg aspect-square w-full max-w-md mx-auto animate-pulse"></div>
          <div className="bg-slate-700/50 h-4 rounded w-3/4 mx-auto animate-pulse"></div>
          <div className="bg-slate-700/50 h-4 rounded w-1/2 mx-auto animate-pulse"></div>
        </div>
      )}

      {!isLoading && !imageUrl && (
        <div className="text-center text-slate-500">
          <svg xmlns="http://www.w3.org/2000/svg" className="mx-auto h-12 w-12" fill="none" viewBox="0 0 24 24" stroke="currentColor" strokeWidth={1}>
            <path strokeLinecap="round" strokeLinejoin="round" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
          </svg>
          <p className="mt-2">Your generated image will appear here.</p>
        </div>
      )}

      {imageUrl && (
        <div className="w-full flex flex-col items-center gap-4">
          <img
            src={imageUrl}
            alt="Generated by AI"
            className="rounded-lg shadow-2xl max-w-full max-h-[60vh] object-contain"
          />
          {enhancedPrompt && (
            <div className="w-full max-w-2xl text-left bg-slate-900/70 p-4 rounded-md">
              <h3 className="font-semibold text-violet-300 mb-2">Enhanced Prompt:</h3>
              <p className="text-sm text-slate-300 font-mono leading-relaxed selection:bg-violet-500/30">
                {enhancedPrompt}
              </p>
            </div>
          )}
        </div>
      )}
    </div>
  );
};

export default ImageDisplay;